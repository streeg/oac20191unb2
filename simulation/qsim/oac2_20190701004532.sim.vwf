/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clockinstructionmemory")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("code")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("code[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("control")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 17;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("DataCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("EX_MEM_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Flush")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_A_to_mux")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_A_to_mux[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_A_to_mux";
}

SIGNAL("fw_A_to_mux[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_A_to_mux";
}

SIGNAL("fw_B_to_mux")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_B_to_mux[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_B_to_mux";
}

SIGNAL("fw_B_to_mux[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_B_to_mux";
}

SIGNAL("ID_EX_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IF_ID_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instrlidas")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instrlidas[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("MEM_WB_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result_end_pipe")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result_end_pipe[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("resultALU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("resultALU[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("ALUcontrol_to_ULA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALUcontrol_to_ULA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("clockinstructionmemory")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("code[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 305.73;
			LEVEL 1 FOR 400.017;
			LEVEL 0 FOR 9294.253;
		}
	}
}

TRANSITION_LIST("code[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 307.887;
			LEVEL 1 FOR 400.114;
			LEVEL 0 FOR 9291.999;
		}
	}
}

TRANSITION_LIST("code[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 708.52;
			LEVEL 1 FOR 200.117;
			LEVEL 0 FOR 9091.363;
		}
	}
}

TRANSITION_LIST("code[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 707.421;
			LEVEL 1 FOR 200.111;
			LEVEL 0 FOR 9092.468;
		}
	}
}

TRANSITION_LIST("code[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 307.632;
			LEVEL 1 FOR 600.08;
			LEVEL 0 FOR 9092.288;
		}
	}
}

TRANSITION_LIST("code[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 507.775;
			LEVEL 1 FOR 400.022;
			LEVEL 0 FOR 9092.203;
		}
	}
}

TRANSITION_LIST("code[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 308.076;
			LEVEL 1 FOR 200.09;
			LEVEL 0 FOR 9491.834;
		}
	}
}

TRANSITION_LIST("code[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 706.985;
			LEVEL 1 FOR 200.04;
			LEVEL 0 FOR 9092.975;
		}
	}
}

TRANSITION_LIST("code[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 706.868;
			LEVEL 1 FOR 200.004;
			LEVEL 0 FOR 9093.128;
		}
	}
}

TRANSITION_LIST("code[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 708.94;
			LEVEL 1 FOR 200.173;
			LEVEL 0 FOR 9090.887;
		}
	}
}

TRANSITION_LIST("code[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.075;
			LEVEL 1 FOR 400.03;
			LEVEL 0 FOR 9091.895;
		}
	}
}

TRANSITION_LIST("code[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 307.01;
			LEVEL 1 FOR 200.036;
			LEVEL 0 FOR 9492.954;
		}
	}
}

TRANSITION_LIST("code[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 507.783;
			LEVEL 1 FOR 200.005;
			LEVEL 0 FOR 9292.212;
		}
	}
}

TRANSITION_LIST("code[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 306.923;
			LEVEL 1 FOR 200.038;
			LEVEL 0 FOR 199.962;
			LEVEL 1 FOR 200.038;
			LEVEL 0 FOR 9093.039;
		}
	}
}

TRANSITION_LIST("code[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 708.982;
			LEVEL 1 FOR 200.252;
			LEVEL 0 FOR 9090.766;
		}
	}
}

TRANSITION_LIST("control[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.635;
			LEVEL X FOR 0.593;
			LEVEL 0 FOR 9995.772;
		}
	}
}

TRANSITION_LIST("control[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.929;
			LEVEL X FOR 3.709;
			LEVEL 1 FOR 301.402;
			LEVEL 0 FOR 401.199;
			LEVEL 1 FOR 9289.761;
		}
	}
}

TRANSITION_LIST("control[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.31;
			LEVEL X FOR 4.519;
			LEVEL 1 FOR 301.264;
			LEVEL 0 FOR 1.316;
			LEVEL 1 FOR 399.939;
			LEVEL 0 FOR 197.913;
			LEVEL 1 FOR 9090.739;
		}
	}
}

TRANSITION_LIST("control[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.814;
			LEVEL X FOR 2.916;
			LEVEL 0 FOR 703.683;
			LEVEL 1 FOR 197.287;
			LEVEL 0 FOR 9092.3;
		}
	}
}

TRANSITION_LIST("control[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.975;
			LEVEL X FOR 4.569;
			LEVEL 0 FOR 300.337;
			LEVEL 1 FOR 400.088;
			LEVEL 0 FOR 9291.031;
		}
	}
}

TRANSITION_LIST("control[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.117;
			LEVEL X FOR 0.491;
			LEVEL 0 FOR 9995.392;
		}
	}
}

TRANSITION_LIST("control[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.644;
			LEVEL X FOR 1.292;
			LEVEL 0 FOR 9994.064;
		}
	}
}

TRANSITION_LIST("control[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.897;
			LEVEL X FOR 1.186;
			LEVEL 0 FOR 9994.917;
		}
	}
}

TRANSITION_LIST("control[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.144;
			LEVEL X FOR 3.386;
			LEVEL 1 FOR 301.735;
			LEVEL 0 FOR 1.644;
			LEVEL 1 FOR 9688.091;
		}
	}
}

TRANSITION_LIST("control[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.644;
			LEVEL X FOR 1.292;
			LEVEL 0 FOR 9994.064;
		}
	}
}

TRANSITION_LIST("control[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.841;
			LEVEL X FOR 0.656;
			LEVEL 0 FOR 9995.503;
		}
	}
}

TRANSITION_LIST("control[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.992;
			LEVEL X FOR 1.138;
			LEVEL 0 FOR 9994.87;
		}
	}
}

TRANSITION_LIST("DataCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("EX_MEM_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Flush")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("fw_A_to_mux[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.268;
			LEVEL X FOR 1.763;
			LEVEL 0 FOR 302.216;
			LEVEL 1 FOR 399.876;
			LEVEL 0 FOR 199.748;
			LEVEL 1 FOR 0.394;
			LEVEL 0 FOR 399.848;
			LEVEL 1 FOR 8689.887;
		}
	}
}

TRANSITION_LIST("fw_A_to_mux[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.862;
			LEVEL X FOR 1.31;
			LEVEL 0 FOR 501.897;
			LEVEL 1 FOR 400.404;
			LEVEL 0 FOR 0.461;
			LEVEL 1 FOR 199.439;
			LEVEL 0 FOR 400.603;
			LEVEL 1 FOR 8491.024;
		}
	}
}

TRANSITION_LIST("fw_B_to_mux[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.739;
			LEVEL X FOR 3.223;
			LEVEL 0 FOR 302.377;
			LEVEL 1 FOR 197.445;
			LEVEL 0 FOR 402.116;
			LEVEL 1 FOR 198.142;
			LEVEL 0 FOR 202.324;
			LEVEL 1 FOR 8689.634;
		}
	}
}

TRANSITION_LIST("fw_B_to_mux[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.159;
			LEVEL X FOR 1.752;
			LEVEL 0 FOR 501.761;
			LEVEL 1 FOR 0.398;
			LEVEL 0 FOR 600.072;
			LEVEL 1 FOR 0.271;
			LEVEL 0 FOR 399.823;
			LEVEL 1 FOR 8489.764;
		}
	}
}

TRANSITION_LIST("ID_EX_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("IF_ID_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.013;
			LEVEL 1 FOR 399.911;
			LEVEL 0 FOR 9491.076;
		}
	}
}

TRANSITION_LIST("instrlidas[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 108.709;
			LEVEL 1 FOR 399.954;
			LEVEL 0 FOR 9491.337;
		}
	}
}

TRANSITION_LIST("instrlidas[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 510.743;
			LEVEL 1 FOR 200.103;
			LEVEL 0 FOR 9289.154;
		}
	}
}

TRANSITION_LIST("instrlidas[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.931;
			LEVEL 1 FOR 199.93;
			LEVEL 0 FOR 9291.139;
		}
	}
}

TRANSITION_LIST("instrlidas[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.71;
			LEVEL 1 FOR 599.996;
			LEVEL 0 FOR 9289.294;
		}
	}
}

TRANSITION_LIST("instrlidas[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 309.966;
			LEVEL 1 FOR 399.946;
			LEVEL 0 FOR 9290.088;
		}
	}
}

TRANSITION_LIST("instrlidas[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.461;
			LEVEL 1 FOR 199.954;
			LEVEL 0 FOR 9690.585;
		}
	}
}

TRANSITION_LIST("instrlidas[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.947;
			LEVEL 1 FOR 199.97;
			LEVEL 0 FOR 9291.083;
		}
	}
}

TRANSITION_LIST("instrlidas[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.719;
			LEVEL 1 FOR 199.948;
			LEVEL 0 FOR 9291.333;
		}
	}
}

TRANSITION_LIST("instrlidas[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 509.007;
			LEVEL 1 FOR 199.981;
			LEVEL 0 FOR 9291.012;
		}
	}
}

TRANSITION_LIST("instrlidas[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 308.726;
			LEVEL 1 FOR 399.955;
			LEVEL 0 FOR 9291.319;
		}
	}
}

TRANSITION_LIST("instrlidas[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 108.701;
			LEVEL 1 FOR 199.95;
			LEVEL 0 FOR 9691.349;
		}
	}
}

TRANSITION_LIST("instrlidas[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 309.47;
			LEVEL 1 FOR 199.941;
			LEVEL 0 FOR 9490.589;
		}
	}
}

TRANSITION_LIST("instrlidas[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.514;
			LEVEL 1 FOR 200.06;
			LEVEL 0 FOR 199.94;
			LEVEL 1 FOR 200.06;
			LEVEL 0 FOR 9289.426;
		}
	}
}

TRANSITION_LIST("instrlidas[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.712;
			LEVEL 1 FOR 199.949;
			LEVEL 0 FOR 9291.339;
		}
	}
}

TRANSITION_LIST("MEM_WB_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("PC_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.275;
			LEVEL X FOR 1.944;
			LEVEL 1 FOR 9992.781;
		}
	}
}

TRANSITION_LIST("result_end_pipe[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.409;
			LEVEL X FOR 0.726;
			LEVEL 0 FOR 1302.122;
			LEVEL 1 FOR 200.069;
			LEVEL 0 FOR 8492.674;
		}
	}
}

TRANSITION_LIST("result_end_pipe[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.596;
			LEVEL X FOR 0.334;
			LEVEL 0 FOR 1302.513;
			LEVEL 1 FOR 200.066;
			LEVEL 0 FOR 8490.491;
		}
	}
}

TRANSITION_LIST("result_end_pipe[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.728;
			LEVEL X FOR 1.014;
			LEVEL 0 FOR 1301.804;
			LEVEL 1 FOR 200.099;
			LEVEL 0 FOR 8491.355;
		}
	}
}

TRANSITION_LIST("result_end_pipe[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.458;
			LEVEL X FOR 0.688;
			LEVEL 0 FOR 1302.082;
			LEVEL 1 FOR 200.264;
			LEVEL 0 FOR 8489.508;
		}
	}
}

TRANSITION_LIST("result_end_pipe[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.546;
			LEVEL X FOR 0.565;
			LEVEL 0 FOR 1302.635;
			LEVEL 1 FOR 200.105;
			LEVEL 0 FOR 8491.149;
		}
	}
}

TRANSITION_LIST("result_end_pipe[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.214;
			LEVEL X FOR 1.328;
			LEVEL 0 FOR 1301.542;
			LEVEL 1 FOR 200.045;
			LEVEL 0 FOR 8490.871;
		}
	}
}

TRANSITION_LIST("result_end_pipe[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.532;
			LEVEL X FOR 0.335;
			LEVEL 0 FOR 1302.479;
			LEVEL 1 FOR 200.102;
			LEVEL 0 FOR 8491.552;
		}
	}
}

TRANSITION_LIST("result_end_pipe[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.071;
			LEVEL X FOR 0.82;
			LEVEL 0 FOR 1302.001;
			LEVEL 1 FOR 200.093;
			LEVEL 0 FOR 8491.015;
		}
	}
}

TRANSITION_LIST("result_end_pipe[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.891;
			LEVEL X FOR 0.562;
			LEVEL 0 FOR 1302.69;
			LEVEL 1 FOR 200.028;
			LEVEL 0 FOR 8490.829;
		}
	}
}

TRANSITION_LIST("result_end_pipe[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.704;
			LEVEL X FOR 1.13;
			LEVEL 0 FOR 1301.816;
			LEVEL 1 FOR 199.952;
			LEVEL 0 FOR 8492.398;
		}
	}
}

TRANSITION_LIST("result_end_pipe[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.236;
			LEVEL X FOR 0.373;
			LEVEL 0 FOR 1302.512;
			LEVEL 1 FOR 200.054;
			LEVEL 0 FOR 8492.825;
		}
	}
}

TRANSITION_LIST("result_end_pipe[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.58;
			LEVEL X FOR 1.348;
			LEVEL 0 FOR 1301.488;
			LEVEL 1 FOR 200.196;
			LEVEL 0 FOR 8489.388;
		}
	}
}

TRANSITION_LIST("result_end_pipe[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.075;
			LEVEL X FOR 0.564;
			LEVEL 0 FOR 1302.259;
			LEVEL 1 FOR 200.075;
			LEVEL 0 FOR 8491.027;
		}
	}
}

TRANSITION_LIST("result_end_pipe[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.377;
			LEVEL X FOR 0.378;
			LEVEL 0 FOR 1302.481;
			LEVEL 1 FOR 200.08;
			LEVEL 0 FOR 8490.684;
		}
	}
}

TRANSITION_LIST("result_end_pipe[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.214;
			LEVEL X FOR 0.377;
			LEVEL 0 FOR 1302.511;
			LEVEL 1 FOR 200.07;
			LEVEL 0 FOR 8490.828;
		}
	}
}

TRANSITION_LIST("result_end_pipe[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.025;
			LEVEL X FOR 0.608;
			LEVEL 0 FOR 1302.3;
			LEVEL 1 FOR 200.032;
			LEVEL 0 FOR 8492.035;
		}
	}
}

TRANSITION_LIST("result_end_pipe[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.176;
			LEVEL X FOR 0.563;
			LEVEL 0 FOR 1302.252;
			LEVEL 1 FOR 200.098;
			LEVEL 0 FOR 8490.911;
		}
	}
}

TRANSITION_LIST("result_end_pipe[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.779;
			LEVEL X FOR 0.375;
			LEVEL 0 FOR 1302.489;
			LEVEL 1 FOR 200.09;
			LEVEL 0 FOR 8492.267;
		}
	}
}

TRANSITION_LIST("result_end_pipe[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.647;
			LEVEL X FOR 0.376;
			LEVEL 0 FOR 1302.538;
			LEVEL 1 FOR 200.044;
			LEVEL 0 FOR 8491.395;
		}
	}
}

TRANSITION_LIST("result_end_pipe[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.959;
			LEVEL X FOR 0.687;
			LEVEL 0 FOR 1302.2;
			LEVEL 1 FOR 200.146;
			LEVEL 0 FOR 8491.008;
		}
	}
}

TRANSITION_LIST("result_end_pipe[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.83;
			LEVEL X FOR 0.564;
			LEVEL 0 FOR 1302.716;
			LEVEL 1 FOR 200.02;
			LEVEL 0 FOR 8491.87;
		}
	}
}

TRANSITION_LIST("result_end_pipe[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.223;
			LEVEL X FOR 0.603;
			LEVEL 0 FOR 1302.315;
			LEVEL 1 FOR 200.039;
			LEVEL 0 FOR 8491.82;
		}
	}
}

TRANSITION_LIST("result_end_pipe[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.999;
			LEVEL X FOR 0.564;
			LEVEL 0 FOR 1302.7;
			LEVEL 1 FOR 200.021;
			LEVEL 0 FOR 8491.716;
		}
	}
}

TRANSITION_LIST("result_end_pipe[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.007;
			LEVEL X FOR 0.487;
			LEVEL 0 FOR 1302.83;
			LEVEL 1 FOR 200.121;
			LEVEL 0 FOR 8490.555;
		}
	}
}

TRANSITION_LIST("result_end_pipe[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.836;
			LEVEL X FOR 0.332;
			LEVEL 0 FOR 1302.561;
			LEVEL 1 FOR 200.022;
			LEVEL 0 FOR 8492.249;
		}
	}
}

TRANSITION_LIST("result_end_pipe[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.942;
			LEVEL X FOR 0.562;
			LEVEL 0 FOR 1302.626;
			LEVEL 1 FOR 200.097;
			LEVEL 0 FOR 8491.773;
		}
	}
}

TRANSITION_LIST("result_end_pipe[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.268;
			LEVEL X FOR 0.376;
			LEVEL 0 FOR 1102.593;
			LEVEL 1 FOR 199.986;
			LEVEL 0 FOR 8691.777;
		}
	}
}

TRANSITION_LIST("result_end_pipe[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.268;
			LEVEL X FOR 0.334;
			LEVEL 0 FOR 902.537;
			LEVEL 1 FOR 200.043;
			LEVEL 0 FOR 199.957;
			LEVEL 1 FOR 200.043;
			LEVEL 0 FOR 8490.818;
		}
	}
}

TRANSITION_LIST("result_end_pipe[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.023;
			LEVEL X FOR 0.419;
			LEVEL 0 FOR 1102.525;
			LEVEL 1 FOR 199.98;
			LEVEL 0 FOR 8691.053;
		}
	}
}

TRANSITION_LIST("result_end_pipe[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.091;
			LEVEL X FOR 0.488;
			LEVEL 0 FOR 902.313;
			LEVEL 1 FOR 200.266;
			LEVEL 0 FOR 199.734;
			LEVEL 1 FOR 200.266;
			LEVEL 0 FOR 8489.842;
		}
	}
}

TRANSITION_LIST("result_end_pipe[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.921;
			LEVEL X FOR 0.692;
			LEVEL 0 FOR 1302.21;
			LEVEL 1 FOR 200.013;
			LEVEL 0 FOR 8492.164;
		}
	}
}

TRANSITION_LIST("result_end_pipe[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.33;
			LEVEL X FOR 0.412;
			LEVEL 0 FOR 1302.458;
			LEVEL 1 FOR 200.044;
			LEVEL 0 FOR 8491.756;
		}
	}
}

TRANSITION_LIST("resultALU[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.033;
			LEVEL X FOR 6.673;
			LEVEL 0 FOR 901.075;
			LEVEL 1 FOR 0.255;
			LEVEL 0 FOR 0.424;
			LEVEL 1 FOR 198.174;
			LEVEL 0 FOR 3.629;
			LEVEL 1 FOR 1.082;
			LEVEL 0 FOR 8883.655;
		}
	}
}

TRANSITION_LIST("resultALU[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.326;
			LEVEL X FOR 5.938;
			LEVEL 0 FOR 902.105;
			LEVEL 1 FOR 198.276;
			LEVEL 0 FOR 0.395;
			LEVEL 1 FOR 0.571;
			LEVEL 0 FOR 1.962;
			LEVEL 1 FOR 1.417;
			LEVEL 0 FOR 8884.01;
		}
	}
}

TRANSITION_LIST("resultALU[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.199;
			LEVEL X FOR 6.227;
			LEVEL 0 FOR 100.664;
			LEVEL 1 FOR 1.089;
			LEVEL 0 FOR 800.089;
			LEVEL 1 FOR 198.32;
			LEVEL 0 FOR 0.467;
			LEVEL 1 FOR 0.268;
			LEVEL 0 FOR 0.564;
			LEVEL 1 FOR 1.133;
			LEVEL 0 FOR 1.473;
			LEVEL 1 FOR 1.336;
			LEVEL 0 FOR 8883.171;
		}
	}
}

TRANSITION_LIST("resultALU[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.093;
			LEVEL X FOR 6.403;
			LEVEL 0 FOR 901.072;
			LEVEL 1 FOR 198.901;
			LEVEL 0 FOR 0.295;
			LEVEL 1 FOR 0.274;
			LEVEL 0 FOR 2.566;
			LEVEL 1 FOR 1.203;
			LEVEL 0 FOR 8885.193;
		}
	}
}

TRANSITION_LIST("resultALU[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.122;
			LEVEL X FOR 5.815;
			LEVEL 0 FOR 101.465;
			LEVEL 1 FOR 0.444;
			LEVEL 0 FOR 800.507;
			LEVEL 1 FOR 197.49;
			LEVEL 0 FOR 1.142;
			LEVEL 1 FOR 0.618;
			LEVEL 0 FOR 0.64;
			LEVEL 1 FOR 0.444;
			LEVEL 0 FOR 2.275;
			LEVEL 1 FOR 1.078;
			LEVEL 0 FOR 8882.96;
		}
	}
}

TRANSITION_LIST("resultALU[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.559;
			LEVEL X FOR 6.344;
			LEVEL 0 FOR 900.488;
			LEVEL 1 FOR 0.239;
			LEVEL 0 FOR 0.925;
			LEVEL 1 FOR 197.684;
			LEVEL 0 FOR 0.802;
			LEVEL 1 FOR 0.715;
			LEVEL 0 FOR 2.668;
			LEVEL 1 FOR 1.336;
			LEVEL 0 FOR 8884.24;
		}
	}
}

TRANSITION_LIST("resultALU[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.225;
			LEVEL X FOR 6.18;
			LEVEL 0 FOR 900.752;
			LEVEL 1 FOR 0.294;
			LEVEL 0 FOR 0.864;
			LEVEL 1 FOR 198.094;
			LEVEL 0 FOR 0.37;
			LEVEL 1 FOR 0.798;
			LEVEL 0 FOR 1.52;
			LEVEL 1 FOR 1.75;
			LEVEL 0 FOR 8885.153;
		}
	}
}

TRANSITION_LIST("resultALU[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.505;
			LEVEL X FOR 6.514;
			LEVEL 0 FOR 899.809;
			LEVEL 1 FOR 0.475;
			LEVEL 0 FOR 0.689;
			LEVEL 1 FOR 197.755;
			LEVEL 0 FOR 0.148;
			LEVEL 1 FOR 0.763;
			LEVEL 0 FOR 0.116;
			LEVEL 1 FOR 0.655;
			LEVEL 0 FOR 2.303;
			LEVEL 1 FOR 2.432;
			LEVEL 0 FOR 8881.836;
		}
	}
}

TRANSITION_LIST("resultALU[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.355;
			LEVEL X FOR 6.155;
			LEVEL 0 FOR 901.18;
			LEVEL 1 FOR 198.396;
			LEVEL 0 FOR 4.595;
			LEVEL 1 FOR 1.004;
			LEVEL 0 FOR 8884.315;
		}
	}
}

TRANSITION_LIST("resultALU[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.121;
			LEVEL X FOR 6.793;
			LEVEL 0 FOR 900.393;
			LEVEL 1 FOR 198.3;
			LEVEL 0 FOR 0.56;
			LEVEL 1 FOR 0.283;
			LEVEL 0 FOR 4.513;
			LEVEL 1 FOR 1.497;
			LEVEL 0 FOR 8883.54;
		}
	}
}

TRANSITION_LIST("resultALU[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.267;
			LEVEL X FOR 6.936;
			LEVEL 0 FOR 100.108;
			LEVEL 1 FOR 0.546;
			LEVEL 0 FOR 799.992;
			LEVEL 1 FOR 198.574;
			LEVEL 0 FOR 0.461;
			LEVEL 1 FOR 0.174;
			LEVEL 0 FOR 1.094;
			LEVEL 1 FOR 0.439;
			LEVEL 0 FOR 1.452;
			LEVEL 1 FOR 1.955;
			LEVEL 0 FOR 8884.002;
		}
	}
}

TRANSITION_LIST("resultALU[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.492;
			LEVEL X FOR 7.37;
			LEVEL 0 FOR 900.261;
			LEVEL 1 FOR 198.567;
			LEVEL 0 FOR 0.409;
			LEVEL 1 FOR 0.261;
			LEVEL 0 FOR 3.072;
			LEVEL 1 FOR 2.108;
			LEVEL 0 FOR 8883.46;
		}
	}
}

TRANSITION_LIST("resultALU[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.963;
			LEVEL X FOR 7.625;
			LEVEL 0 FOR 899.686;
			LEVEL 1 FOR 0.411;
			LEVEL 0 FOR 0.761;
			LEVEL 1 FOR 198.151;
			LEVEL 0 FOR 0.501;
			LEVEL 1 FOR 0.729;
			LEVEL 0 FOR 2.33;
			LEVEL 1 FOR 1.672;
			LEVEL 0 FOR 8883.171;
		}
	}
}

TRANSITION_LIST("resultALU[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.592;
			LEVEL X FOR 7.808;
			LEVEL 0 FOR 899.884;
			LEVEL 1 FOR 0.254;
			LEVEL 0 FOR 0.857;
			LEVEL 1 FOR 198.2;
			LEVEL 0 FOR 0.565;
			LEVEL 1 FOR 0.584;
			LEVEL 0 FOR 3.193;
			LEVEL 1 FOR 1.25;
			LEVEL 0 FOR 8883.813;
		}
	}
}

TRANSITION_LIST("resultALU[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.826;
			LEVEL X FOR 8.177;
			LEVEL 0 FOR 899.467;
			LEVEL 1 FOR 0.358;
			LEVEL 0 FOR 0.825;
			LEVEL 1 FOR 198.083;
			LEVEL 0 FOR 4.451;
			LEVEL 1 FOR 1.017;
			LEVEL 0 FOR 8883.796;
		}
	}
}

TRANSITION_LIST("resultALU[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.143;
			LEVEL X FOR 8.34;
			LEVEL 0 FOR 900.267;
			LEVEL 1 FOR 198.74;
			LEVEL 0 FOR 3.247;
			LEVEL 1 FOR 1.627;
			LEVEL 0 FOR 8882.636;
		}
	}
}

TRANSITION_LIST("resultALU[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.247;
			LEVEL X FOR 7.295;
			LEVEL 0 FOR 900.946;
			LEVEL 1 FOR 198.239;
			LEVEL 0 FOR 0.155;
			LEVEL 1 FOR 0.616;
			LEVEL 0 FOR 0.293;
			LEVEL 1 FOR 0.093;
			LEVEL 0 FOR 1.877;
			LEVEL 1 FOR 1.809;
			LEVEL 0 FOR 8884.43;
		}
	}
}

TRANSITION_LIST("resultALU[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.727;
			LEVEL X FOR 7.159;
			LEVEL 0 FOR 899.269;
			LEVEL 1 FOR 0.635;
			LEVEL 0 FOR 1.433;
			LEVEL 1 FOR 198.003;
			LEVEL 0 FOR 2.966;
			LEVEL 1 FOR 1.726;
			LEVEL 0 FOR 8884.082;
		}
	}
}

TRANSITION_LIST("resultALU[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.918;
			LEVEL X FOR 7.681;
			LEVEL 0 FOR 901.724;
			LEVEL 1 FOR 198.237;
			LEVEL 0 FOR 3.261;
			LEVEL 1 FOR 1.248;
			LEVEL 0 FOR 8883.931;
		}
	}
}

TRANSITION_LIST("resultALU[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.466;
			LEVEL X FOR 7.549;
			LEVEL 0 FOR 899.522;
			LEVEL 1 FOR 0.586;
			LEVEL 0 FOR 0.843;
			LEVEL 1 FOR 198.497;
			LEVEL 0 FOR 1.928;
			LEVEL 1 FOR 1.461;
			LEVEL 0 FOR 8885.148;
		}
	}
}

TRANSITION_LIST("resultALU[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.314;
			LEVEL X FOR 7.553;
			LEVEL 0 FOR 900.565;
			LEVEL 1 FOR 0.301;
			LEVEL 0 FOR 0.863;
			LEVEL 1 FOR 198.206;
			LEVEL 0 FOR 2.148;
			LEVEL 1 FOR 1.213;
			LEVEL 0 FOR 8884.837;
		}
	}
}

TRANSITION_LIST("resultALU[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.418;
			LEVEL X FOR 7.527;
			LEVEL 0 FOR 901.38;
			LEVEL 1 FOR 198.142;
			LEVEL 0 FOR 1.894;
			LEVEL 1 FOR 1.04;
			LEVEL 0 FOR 8885.599;
		}
	}
}

TRANSITION_LIST("resultALU[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.914;
			LEVEL X FOR 7.859;
			LEVEL 0 FOR 900.496;
			LEVEL 1 FOR 0.402;
			LEVEL 0 FOR 0.725;
			LEVEL 1 FOR 198.09;
			LEVEL 0 FOR 1.874;
			LEVEL 1 FOR 1.681;
			LEVEL 0 FOR 8883.959;
		}
	}
}

TRANSITION_LIST("resultALU[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.197;
			LEVEL X FOR 6.461;
			LEVEL 0 FOR 901.788;
			LEVEL 1 FOR 198.472;
			LEVEL 0 FOR 2.557;
			LEVEL 1 FOR 1.28;
			LEVEL 0 FOR 8885.245;
		}
	}
}

TRANSITION_LIST("resultALU[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.403;
			LEVEL X FOR 8.006;
			LEVEL 0 FOR 901.26;
			LEVEL 1 FOR 198.589;
			LEVEL 0 FOR 0.607;
			LEVEL 1 FOR 0.245;
			LEVEL 0 FOR 1.385;
			LEVEL 1 FOR 1.884;
			LEVEL 0 FOR 8883.621;
		}
	}
}

TRANSITION_LIST("resultALU[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.494;
			LEVEL X FOR 7.844;
			LEVEL 0 FOR 700.81;
			LEVEL 1 FOR 1.205;
			LEVEL 0 FOR 199.616;
			LEVEL 1 FOR 198.203;
			LEVEL 0 FOR 2.883;
			LEVEL 1 FOR 1.156;
			LEVEL 0 FOR 8883.789;
		}
	}
}

TRANSITION_LIST("resultALU[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.508;
			LEVEL X FOR 7.721;
			LEVEL 0 FOR 699.411;
			LEVEL 1 FOR 1.449;
			LEVEL 0 FOR 1.062;
			LEVEL 1 FOR 198.132;
			LEVEL 0 FOR 0.092;
			LEVEL 1 FOR 0.27;
			LEVEL 0 FOR 0.186;
			LEVEL 1 FOR 0.44;
			LEVEL 0 FOR 0.268;
			LEVEL 1 FOR 0.453;
			LEVEL 0 FOR 197.735;
			LEVEL 1 FOR 3.231;
			LEVEL 0 FOR 8884.042;
		}
	}
}

TRANSITION_LIST("resultALU[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.363;
			LEVEL X FOR 8.217;
			LEVEL 0 FOR 502.003;
			LEVEL 1 FOR 197.362;
			LEVEL 0 FOR 1.197;
			LEVEL 1 FOR 1.432;
			LEVEL 0 FOR 198.426;
			LEVEL 1 FOR 0.659;
			LEVEL 0 FOR 0.51;
			LEVEL 1 FOR 198.408;
			LEVEL 0 FOR 1.958;
			LEVEL 1 FOR 0.903;
			LEVEL 0 FOR 8883.562;
		}
	}
}

TRANSITION_LIST("resultALU[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.714;
			LEVEL X FOR 7.984;
			LEVEL 0 FOR 700.521;
			LEVEL 1 FOR 199.625;
			LEVEL 0 FOR 0.808;
			LEVEL 1 FOR 0.315;
			LEVEL 0 FOR 0.481;
			LEVEL 1 FOR 0.873;
			LEVEL 0 FOR 197.332;
			LEVEL 1 FOR 0.249;
			LEVEL 0 FOR 1.021;
			LEVEL 1 FOR 1.762;
			LEVEL 0 FOR 8884.315;
		}
	}
}

TRANSITION_LIST("resultALU[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.158;
			LEVEL X FOR 7.756;
			LEVEL 0 FOR 501.643;
			LEVEL 1 FOR 197.775;
			LEVEL 0 FOR 1.172;
			LEVEL 1 FOR 0.103;
			LEVEL 0 FOR 201.046;
			LEVEL 1 FOR 198.125;
			LEVEL 0 FOR 0.686;
			LEVEL 1 FOR 0.078;
			LEVEL 0 FOR 2.229;
			LEVEL 1 FOR 1.329;
			LEVEL 0 FOR 8882.9;
		}
	}
}

TRANSITION_LIST("resultALU[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.656;
			LEVEL X FOR 6.652;
			LEVEL 0 FOR 902.264;
			LEVEL 1 FOR 198.655;
			LEVEL 0 FOR 2.312;
			LEVEL 1 FOR 1.21;
			LEVEL 0 FOR 8883.251;
		}
	}
}

TRANSITION_LIST("resultALU[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.017;
			LEVEL X FOR 5.492;
			LEVEL 0 FOR 900.735;
			LEVEL 1 FOR 0.17;
			LEVEL 0 FOR 0.407;
			LEVEL 1 FOR 199.274;
			LEVEL 0 FOR 4.789;
			LEVEL 1 FOR 0.839;
			LEVEL 0 FOR 8883.277;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 909.146;
			LEVEL 1 FOR 199.128;
			LEVEL 0 FOR 8891.726;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.925;
			LEVEL X FOR 1.943;
			LEVEL 1 FOR 101.98;
			LEVEL 0 FOR 400.051;
			LEVEL 1 FOR 400.052;
			LEVEL 0 FOR 200.094;
			LEVEL 1 FOR 0.322;
			LEVEL 0 FOR 8891.633;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.147;
			LEVEL X FOR 2.18;
			LEVEL 0 FOR 902.077;
			LEVEL 1 FOR 0.195;
			LEVEL 0 FOR 0.969;
			LEVEL 1 FOR 199.157;
			LEVEL 0 FOR 8890.275;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clockinstructionmemory";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "code";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "code[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "control[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "DataCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EX_MEM_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Flush";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "ID_EX_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IF_ID_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
	CHILDREN = 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_WB_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 137;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
