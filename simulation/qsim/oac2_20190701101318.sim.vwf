/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clockinstructionmemory")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("code")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("code[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("code[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "code";
}

SIGNAL("control")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 17;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("control[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "control";
}

SIGNAL("DataCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("EX_MEM_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Flush")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_A_to_mux")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_A_to_mux[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_A_to_mux";
}

SIGNAL("fw_A_to_mux[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_A_to_mux";
}

SIGNAL("fw_B_to_mux")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fw_B_to_mux[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_B_to_mux";
}

SIGNAL("fw_B_to_mux[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "fw_B_to_mux";
}

SIGNAL("ID_EX_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IF_ID_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instrlidas")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instrlidas[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("instrlidas[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instrlidas";
}

SIGNAL("MEM_WB_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result_end_pipe")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("result_end_pipe[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("result_end_pipe[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "result_end_pipe";
}

SIGNAL("resultALU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("resultALU[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("resultALU[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "resultALU";
}

SIGNAL("ALUcontrol_to_ULA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ALUcontrol_to_ULA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("ALUcontrol_to_ULA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ALUcontrol_to_ULA";
}

SIGNAL("EscreveReg_mem_to_fw")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EscreveReg_wb_to_fw")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
	}
}

TRANSITION_LIST("clockinstructionmemory")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("code[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 306.654;
			LEVEL 1 FOR 400.087;
			LEVEL 0 FOR 9293.259;
		}
	}
}

TRANSITION_LIST("code[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 305.919;
			LEVEL 1 FOR 400.01;
			LEVEL 0 FOR 9294.071;
		}
	}
}

TRANSITION_LIST("code[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 707.511;
			LEVEL 1 FOR 200.003;
			LEVEL 0 FOR 9092.486;
		}
	}
}

TRANSITION_LIST("code[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 707.602;
			LEVEL 1 FOR 200.104;
			LEVEL 0 FOR 9092.294;
		}
	}
}

TRANSITION_LIST("code[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 308.162;
			LEVEL 1 FOR 600.162;
			LEVEL 0 FOR 9091.676;
		}
	}
}

TRANSITION_LIST("code[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 506.639;
			LEVEL 1 FOR 399.997;
			LEVEL 0 FOR 9093.364;
		}
	}
}

TRANSITION_LIST("code[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 306.889;
			LEVEL 1 FOR 199.996;
			LEVEL 0 FOR 9493.115;
		}
	}
}

TRANSITION_LIST("code[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 706.652;
			LEVEL 1 FOR 199.974;
			LEVEL 0 FOR 9093.374;
		}
	}
}

TRANSITION_LIST("code[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 706.124;
			LEVEL 1 FOR 199.967;
			LEVEL 0 FOR 9093.909;
		}
	}
}

TRANSITION_LIST("code[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 707.98;
			LEVEL 1 FOR 199.965;
			LEVEL 0 FOR 9092.055;
		}
	}
}

TRANSITION_LIST("code[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 506.505;
			LEVEL 1 FOR 400.025;
			LEVEL 0 FOR 9093.47;
		}
	}
}

TRANSITION_LIST("code[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 306.801;
			LEVEL 1 FOR 200.067;
			LEVEL 0 FOR 9493.132;
		}
	}
}

TRANSITION_LIST("code[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 506.841;
			LEVEL 1 FOR 200.074;
			LEVEL 0 FOR 9293.085;
		}
	}
}

TRANSITION_LIST("code[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 307.718;
			LEVEL 1 FOR 200.156;
			LEVEL 0 FOR 9492.126;
		}
	}
}

TRANSITION_LIST("code[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("code[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 705.987;
			LEVEL 1 FOR 200.009;
			LEVEL 0 FOR 9094.004;
		}
	}
}

TRANSITION_LIST("control[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("control[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.999;
			LEVEL X FOR 0.932;
			LEVEL 0 FOR 9995.069;
		}
	}
}

TRANSITION_LIST("control[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.008;
			LEVEL X FOR 2.403;
			LEVEL 1 FOR 300.863;
			LEVEL 0 FOR 400.94;
			LEVEL 1 FOR 9291.786;
		}
	}
}

TRANSITION_LIST("control[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.553;
			LEVEL X FOR 2.603;
			LEVEL 1 FOR 701.507;
			LEVEL 0 FOR 0.291;
			LEVEL 1 FOR 9291.046;
		}
	}
}

TRANSITION_LIST("control[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.555;
			LEVEL X FOR 2.265;
			LEVEL 0 FOR 9994.18;
		}
	}
}

TRANSITION_LIST("control[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.068;
			LEVEL X FOR 3.542;
			LEVEL 0 FOR 301.31;
			LEVEL 1 FOR 400.01;
			LEVEL 0 FOR 9291.07;
		}
	}
}

TRANSITION_LIST("control[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.904;
			LEVEL X FOR 0.974;
			LEVEL 0 FOR 9995.122;
		}
	}
}

TRANSITION_LIST("control[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.99;
			LEVEL X FOR 0.933;
			LEVEL 0 FOR 9995.077;
		}
	}
}

TRANSITION_LIST("control[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.664;
			LEVEL X FOR 0.612;
			LEVEL 0 FOR 9995.724;
		}
	}
}

TRANSITION_LIST("control[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.792;
			LEVEL X FOR 2.301;
			LEVEL 1 FOR 301.68;
			LEVEL 0 FOR 0.954;
			LEVEL 1 FOR 9691.273;
		}
	}
}

TRANSITION_LIST("control[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.99;
			LEVEL X FOR 0.933;
			LEVEL 0 FOR 9995.077;
		}
	}
}

TRANSITION_LIST("control[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.407;
			LEVEL X FOR 0.419;
			LEVEL 0 FOR 9996.174;
		}
	}
}

TRANSITION_LIST("control[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.364;
			LEVEL X FOR 1.554;
			LEVEL 0 FOR 9995.082;
		}
	}
}

TRANSITION_LIST("DataCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("EX_MEM_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Flush")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("fw_A_to_mux[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.299;
			LEVEL X FOR 1.9;
			LEVEL 0 FOR 302.094;
			LEVEL 1 FOR 399.94;
			LEVEL 0 FOR 199.83;
			LEVEL 1 FOR 0.206;
			LEVEL 0 FOR 400.24;
			LEVEL 1 FOR 8690.491;
		}
	}
}

TRANSITION_LIST("fw_A_to_mux[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.644;
			LEVEL X FOR 1.638;
			LEVEL 0 FOR 501.941;
			LEVEL 1 FOR 399.895;
			LEVEL 0 FOR 0.253;
			LEVEL 1 FOR 199.822;
			LEVEL 0 FOR 400.263;
			LEVEL 1 FOR 8490.544;
		}
	}
}

TRANSITION_LIST("fw_B_to_mux[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.24;
			LEVEL X FOR 1.828;
			LEVEL 0 FOR 302.055;
			LEVEL 1 FOR 199.542;
			LEVEL 0 FOR 400.37;
			LEVEL 1 FOR 199.653;
			LEVEL 0 FOR 200.74;
			LEVEL 1 FOR 8691.572;
		}
	}
}

TRANSITION_LIST("fw_B_to_mux[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.24;
			LEVEL X FOR 1.568;
			LEVEL 0 FOR 1502.212;
			LEVEL 1 FOR 8490.98;
		}
	}
}

TRANSITION_LIST("ID_EX_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("IF_ID_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.122;
			LEVEL 1 FOR 399.938;
			LEVEL 0 FOR 9490.94;
		}
	}
}

TRANSITION_LIST("instrlidas[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.728;
			LEVEL 1 FOR 399.942;
			LEVEL 0 FOR 9490.33;
		}
	}
}

TRANSITION_LIST("instrlidas[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 510.506;
			LEVEL 1 FOR 200.051;
			LEVEL 0 FOR 9289.443;
		}
	}
}

TRANSITION_LIST("instrlidas[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 509.827;
			LEVEL 1 FOR 200.016;
			LEVEL 0 FOR 9290.157;
		}
	}
}

TRANSITION_LIST("instrlidas[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.136;
			LEVEL 1 FOR 599.941;
			LEVEL 0 FOR 9290.923;
		}
	}
}

TRANSITION_LIST("instrlidas[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 309.137;
			LEVEL 1 FOR 399.946;
			LEVEL 0 FOR 9290.917;
		}
	}
}

TRANSITION_LIST("instrlidas[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 110.414;
			LEVEL 1 FOR 200.07;
			LEVEL 0 FOR 9689.516;
		}
	}
}

TRANSITION_LIST("instrlidas[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.954;
			LEVEL 1 FOR 199.955;
			LEVEL 0 FOR 9291.091;
		}
	}
}

TRANSITION_LIST("instrlidas[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 509.19;
			LEVEL 1 FOR 199.911;
			LEVEL 0 FOR 9290.899;
		}
	}
}

TRANSITION_LIST("instrlidas[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 509.061;
			LEVEL 1 FOR 199.973;
			LEVEL 0 FOR 9290.966;
		}
	}
}

TRANSITION_LIST("instrlidas[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 310.315;
			LEVEL 1 FOR 400.069;
			LEVEL 0 FOR 9289.616;
		}
	}
}

TRANSITION_LIST("instrlidas[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 108.985;
			LEVEL 1 FOR 199.946;
			LEVEL 0 FOR 9691.069;
		}
	}
}

TRANSITION_LIST("instrlidas[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 309.218;
			LEVEL 1 FOR 199.966;
			LEVEL 0 FOR 9490.816;
		}
	}
}

TRANSITION_LIST("instrlidas[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 109.176;
			LEVEL 1 FOR 199.935;
			LEVEL 0 FOR 9690.889;
		}
	}
}

TRANSITION_LIST("instrlidas[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("instrlidas[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 508.693;
			LEVEL 1 FOR 199.95;
			LEVEL 0 FOR 9291.357;
		}
	}
}

TRANSITION_LIST("MEM_WB_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("PC_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.291;
			LEVEL X FOR 2.336;
			LEVEL 1 FOR 9993.373;
		}
	}
}

TRANSITION_LIST("result_end_pipe[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.702;
			LEVEL X FOR 0.334;
			LEVEL 0 FOR 9994.964;
		}
	}
}

TRANSITION_LIST("result_end_pipe[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.881;
			LEVEL X FOR 1.02;
			LEVEL 0 FOR 9994.099;
		}
	}
}

TRANSITION_LIST("result_end_pipe[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.392;
			LEVEL X FOR 0.567;
			LEVEL 0 FOR 9994.041;
		}
	}
}

TRANSITION_LIST("result_end_pipe[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.749;
			LEVEL X FOR 0.608;
			LEVEL 0 FOR 9993.643;
		}
	}
}

TRANSITION_LIST("result_end_pipe[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.666;
			LEVEL X FOR 0.63;
			LEVEL 0 FOR 9994.704;
		}
	}
}

TRANSITION_LIST("result_end_pipe[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.961;
			LEVEL X FOR 0.568;
			LEVEL 0 FOR 9994.471;
		}
	}
}

TRANSITION_LIST("result_end_pipe[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.044;
			LEVEL X FOR 0.606;
			LEVEL 0 FOR 9994.35;
		}
	}
}

TRANSITION_LIST("result_end_pipe[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.275;
			LEVEL X FOR 0.61;
			LEVEL 0 FOR 9993.115;
		}
	}
}

TRANSITION_LIST("result_end_pipe[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.376;
			LEVEL X FOR 0.375;
			LEVEL 0 FOR 9994.249;
		}
	}
}

TRANSITION_LIST("result_end_pipe[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.844;
			LEVEL X FOR 0.78;
			LEVEL 0 FOR 9994.376;
		}
	}
}

TRANSITION_LIST("result_end_pipe[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.544;
			LEVEL X FOR 0.565;
			LEVEL 0 FOR 9994.891;
		}
	}
}

TRANSITION_LIST("result_end_pipe[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.914;
			LEVEL X FOR 0.607;
			LEVEL 0 FOR 9994.479;
		}
	}
}

TRANSITION_LIST("result_end_pipe[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.346;
			LEVEL X FOR 0.603;
			LEVEL 0 FOR 9992.051;
		}
	}
}

TRANSITION_LIST("result_end_pipe[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.089;
			LEVEL X FOR 0.374;
			LEVEL 0 FOR 9992.537;
		}
	}
}

TRANSITION_LIST("result_end_pipe[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.022;
			LEVEL X FOR 0.61;
			LEVEL 0 FOR 9993.368;
		}
	}
}

TRANSITION_LIST("result_end_pipe[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.534;
			LEVEL X FOR 0.626;
			LEVEL 0 FOR 9993.84;
		}
	}
}

TRANSITION_LIST("result_end_pipe[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.904;
			LEVEL X FOR 0.373;
			LEVEL 0 FOR 9993.723;
		}
	}
}

TRANSITION_LIST("result_end_pipe[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.87;
			LEVEL X FOR 0.337;
			LEVEL 0 FOR 9993.793;
		}
	}
}

TRANSITION_LIST("result_end_pipe[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.473;
			LEVEL X FOR 0.457;
			LEVEL 0 FOR 9993.07;
		}
	}
}

TRANSITION_LIST("result_end_pipe[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.575;
			LEVEL X FOR 0.487;
			LEVEL 0 FOR 9992.938;
		}
	}
}

TRANSITION_LIST("result_end_pipe[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.052;
			LEVEL X FOR 0.373;
			LEVEL 0 FOR 9994.575;
		}
	}
}

TRANSITION_LIST("result_end_pipe[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.688;
			LEVEL X FOR 0.566;
			LEVEL 0 FOR 9994.746;
		}
	}
}

TRANSITION_LIST("result_end_pipe[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.78;
			LEVEL X FOR 0.604;
			LEVEL 0 FOR 9994.616;
		}
	}
}

TRANSITION_LIST("result_end_pipe[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.732;
			LEVEL X FOR 0.375;
			LEVEL 0 FOR 9993.893;
		}
	}
}

TRANSITION_LIST("result_end_pipe[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.902;
			LEVEL X FOR 0.454;
			LEVEL 0 FOR 9993.644;
		}
	}
}

TRANSITION_LIST("result_end_pipe[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.646;
			LEVEL X FOR 0.334;
			LEVEL 0 FOR 9995.02;
		}
	}
}

TRANSITION_LIST("result_end_pipe[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.002;
			LEVEL X FOR 0.335;
			LEVEL 0 FOR 1102.512;
			LEVEL 1 FOR 200.068;
			LEVEL 0 FOR 8691.083;
		}
	}
}

TRANSITION_LIST("result_end_pipe[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.249;
			LEVEL X FOR 0.377;
			LEVEL 0 FOR 902.499;
			LEVEL 1 FOR 200.079;
			LEVEL 0 FOR 8891.796;
		}
	}
}

TRANSITION_LIST("result_end_pipe[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.114;
			LEVEL X FOR 0.44;
			LEVEL 0 FOR 1102.449;
			LEVEL 1 FOR 200.068;
			LEVEL 0 FOR 8691.929;
		}
	}
}

TRANSITION_LIST("result_end_pipe[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.212;
			LEVEL X FOR 0.626;
			LEVEL 0 FOR 902.18;
			LEVEL 1 FOR 200.11;
			LEVEL 0 FOR 8891.872;
		}
	}
}

TRANSITION_LIST("result_end_pipe[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.563;
			LEVEL X FOR 0.696;
			LEVEL 0 FOR 9993.741;
		}
	}
}

TRANSITION_LIST("result_end_pipe[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.739;
			LEVEL X FOR 0.441;
			LEVEL 0 FOR 9994.82;
		}
	}
}

TRANSITION_LIST("resultALU[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.975;
			LEVEL X FOR 6.334;
			LEVEL 0 FOR 9987.691;
		}
	}
}

TRANSITION_LIST("resultALU[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.739;
			LEVEL X FOR 6.022;
			LEVEL 0 FOR 9989.239;
		}
	}
}

TRANSITION_LIST("resultALU[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.246;
			LEVEL X FOR 6.218;
			LEVEL 0 FOR 101.035;
			LEVEL 1 FOR 0.682;
			LEVEL 0 FOR 999.031;
			LEVEL 1 FOR 0.682;
			LEVEL 0 FOR 8888.106;
		}
	}
}

TRANSITION_LIST("resultALU[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.45;
			LEVEL X FOR 5.664;
			LEVEL 0 FOR 901.762;
			LEVEL 1 FOR 1.165;
			LEVEL 0 FOR 198.24;
			LEVEL 1 FOR 1.159;
			LEVEL 0 FOR 8887.56;
		}
	}
}

TRANSITION_LIST("resultALU[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.579;
			LEVEL X FOR 6.403;
			LEVEL 0 FOR 100.716;
			LEVEL 1 FOR 0.777;
			LEVEL 0 FOR 999.11;
			LEVEL 1 FOR 0.603;
			LEVEL 0 FOR 8886.812;
		}
	}
}

TRANSITION_LIST("resultALU[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.953;
			LEVEL X FOR 6.327;
			LEVEL 0 FOR 9988.72;
		}
	}
}

TRANSITION_LIST("resultALU[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.508;
			LEVEL X FOR 6.541;
			LEVEL 0 FOR 100.801;
			LEVEL 1 FOR 0.431;
			LEVEL 0 FOR 998.228;
			LEVEL 1 FOR 0.296;
			LEVEL 0 FOR 0.758;
			LEVEL 1 FOR 0.431;
			LEVEL 0 FOR 8888.006;
		}
	}
}

TRANSITION_LIST("resultALU[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.728;
			LEVEL X FOR 6.242;
			LEVEL 0 FOR 9989.03;
		}
	}
}

TRANSITION_LIST("resultALU[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.69;
			LEVEL X FOR 6.406;
			LEVEL 0 FOR 901.234;
			LEVEL 1 FOR 0.852;
			LEVEL 0 FOR 198.531;
			LEVEL 1 FOR 0.923;
			LEVEL 0 FOR 8888.364;
		}
	}
}

TRANSITION_LIST("resultALU[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.347;
			LEVEL X FOR 7.183;
			LEVEL 0 FOR 9988.47;
		}
	}
}

TRANSITION_LIST("resultALU[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.072;
			LEVEL X FOR 6.939;
			LEVEL 0 FOR 100.877;
			LEVEL 1 FOR 0.454;
			LEVEL 0 FOR 999.259;
			LEVEL 1 FOR 0.454;
			LEVEL 0 FOR 8886.945;
		}
	}
}

TRANSITION_LIST("resultALU[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.589;
			LEVEL X FOR 8.167;
			LEVEL 0 FOR 9987.244;
		}
	}
}

TRANSITION_LIST("resultALU[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.383;
			LEVEL X FOR 7.995;
			LEVEL 0 FOR 9987.622;
		}
	}
}

TRANSITION_LIST("resultALU[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.073;
			LEVEL X FOR 7.509;
			LEVEL 0 FOR 9988.418;
		}
	}
}

TRANSITION_LIST("resultALU[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.282;
			LEVEL X FOR 7.353;
			LEVEL 0 FOR 9988.365;
		}
	}
}

TRANSITION_LIST("resultALU[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.727;
			LEVEL X FOR 7.393;
			LEVEL 0 FOR 9987.88;
		}
	}
}

TRANSITION_LIST("resultALU[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.523;
			LEVEL X FOR 7.633;
			LEVEL 0 FOR 898.624;
			LEVEL 1 FOR 1.951;
			LEVEL 0 FOR 197.529;
			LEVEL 1 FOR 0.539;
			LEVEL 0 FOR 8889.201;
		}
	}
}

TRANSITION_LIST("resultALU[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.082;
			LEVEL X FOR 7.403;
			LEVEL 0 FOR 9988.515;
		}
	}
}

TRANSITION_LIST("resultALU[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.633;
			LEVEL X FOR 8.636;
			LEVEL 0 FOR 897.676;
			LEVEL 1 FOR 2.12;
			LEVEL 0 FOR 197.347;
			LEVEL 1 FOR 1.234;
			LEVEL 0 FOR 8888.354;
		}
	}
}

TRANSITION_LIST("resultALU[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.124;
			LEVEL X FOR 7.215;
			LEVEL 0 FOR 899.472;
			LEVEL 1 FOR 0.81;
			LEVEL 0 FOR 9087.379;
		}
	}
}

TRANSITION_LIST("resultALU[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.888;
			LEVEL X FOR 7.748;
			LEVEL 0 FOR 898.667;
			LEVEL 1 FOR 0.771;
			LEVEL 0 FOR 0.128;
			LEVEL 1 FOR 0.73;
			LEVEL 0 FOR 197.713;
			LEVEL 1 FOR 0.561;
			LEVEL 0 FOR 8888.794;
		}
	}
}

TRANSITION_LIST("resultALU[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.832;
			LEVEL X FOR 7.859;
			LEVEL 0 FOR 1098.736;
			LEVEL 1 FOR 0.03;
			LEVEL 0 FOR 8888.543;
		}
	}
}

TRANSITION_LIST("resultALU[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.275;
			LEVEL X FOR 8.037;
			LEVEL 0 FOR 898.885;
			LEVEL 1 FOR 1.185;
			LEVEL 0 FOR 198.282;
			LEVEL 1 FOR 0.321;
			LEVEL 0 FOR 8889.015;
		}
	}
}

TRANSITION_LIST("resultALU[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.986;
			LEVEL X FOR 7.259;
			LEVEL 0 FOR 899.354;
			LEVEL 1 FOR 1.213;
			LEVEL 0 FOR 9087.188;
		}
	}
}

TRANSITION_LIST("resultALU[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.07;
			LEVEL X FOR 7.618;
			LEVEL 0 FOR 9986.312;
		}
	}
}

TRANSITION_LIST("resultALU[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.524;
			LEVEL X FOR 7.306;
			LEVEL 0 FOR 701.201;
			LEVEL 1 FOR 0.681;
			LEVEL 0 FOR 9285.288;
		}
	}
}

TRANSITION_LIST("resultALU[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.073;
			LEVEL X FOR 8.704;
			LEVEL 0 FOR 698.978;
			LEVEL 1 FOR 1.802;
			LEVEL 0 FOR 0.716;
			LEVEL 1 FOR 195.67;
			LEVEL 0 FOR 199.456;
			LEVEL 1 FOR 4.037;
			LEVEL 0 FOR 8886.564;
		}
	}
}

TRANSITION_LIST("resultALU[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.806;
			LEVEL X FOR 7.87;
			LEVEL 0 FOR 500.893;
			LEVEL 1 FOR 198.703;
			LEVEL 0 FOR 0.585;
			LEVEL 1 FOR 1.281;
			LEVEL 0 FOR 395.991;
			LEVEL 1 FOR 1.772;
			LEVEL 0 FOR 8887.099;
		}
	}
}

TRANSITION_LIST("resultALU[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.692;
			LEVEL X FOR 8.82;
			LEVEL 0 FOR 698.975;
			LEVEL 1 FOR 1.241;
			LEVEL 0 FOR 0.219;
			LEVEL 1 FOR 198.187;
			LEVEL 0 FOR 199.291;
			LEVEL 1 FOR 1.117;
			LEVEL 0 FOR 0.01;
			LEVEL 1 FOR 2.936;
			LEVEL 0 FOR 8883.512;
		}
	}
}

TRANSITION_LIST("resultALU[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.842;
			LEVEL X FOR 6.754;
			LEVEL 0 FOR 501.757;
			LEVEL 1 FOR 198.07;
			LEVEL 0 FOR 1.498;
			LEVEL 1 FOR 0.258;
			LEVEL 0 FOR 398.305;
			LEVEL 1 FOR 0.847;
			LEVEL 0 FOR 8887.669;
		}
	}
}

TRANSITION_LIST("resultALU[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.317;
			LEVEL X FOR 7.418;
			LEVEL 0 FOR 899.096;
			LEVEL 1 FOR 0.674;
			LEVEL 0 FOR 198.785;
			LEVEL 1 FOR 0.732;
			LEVEL 0 FOR 8888.978;
		}
	}
}

TRANSITION_LIST("resultALU[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.224;
			LEVEL X FOR 6.673;
			LEVEL 0 FOR 9989.103;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.929;
			LEVEL X FOR 1.49;
			LEVEL 0 FOR 9993.581;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.64;
			LEVEL X FOR 1.339;
			LEVEL 1 FOR 102.579;
			LEVEL 0 FOR 400.183;
			LEVEL 1 FOR 400.1;
			LEVEL 0 FOR 0.745;
			LEVEL 1 FOR 199.609;
			LEVEL 0 FOR 8890.805;
		}
	}
}

TRANSITION_LIST("ALUcontrol_to_ULA[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.61;
			LEVEL X FOR 1.915;
			LEVEL 0 FOR 9992.475;
		}
	}
}

TRANSITION_LIST("EscreveReg_mem_to_fw")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 307.382;
			LEVEL 1 FOR 9692.618;
		}
	}
}

TRANSITION_LIST("EscreveReg_wb_to_fw")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 507.174;
			LEVEL 1 FOR 9492.826;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clockinstructionmemory";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "code";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "code[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "code[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "control[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "ALUcontrol_to_ULA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "DataCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EX_MEM_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Flush";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "fw_A_to_mux[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "fw_B_to_mux[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "ID_EX_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IF_ID_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
	CHILDREN = 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "instrlidas[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 69;
}

DISPLAY_LINE
{
	CHANNEL = "MEM_WB_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "result_end_pipe[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
	CHILDREN = 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 157;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 166;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "resultALU[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 137;
}

DISPLAY_LINE
{
	CHANNEL = "EscreveReg_mem_to_fw";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 170;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EscreveReg_wb_to_fw";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 171;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
